//
//  GameView.m
//  PoolHallJungle
//
//  Created by Mac on 07.03.14.
//  Copyright (c) 2014 maksburo. All rights reserved.
//

#import "GameView.h"
#import "Line.h"

@implementation GameView


//- (id)initWithFrame:(CGRect)rect
//{
//				self = [super initWithFrame:rect];
//				if (self) {
//								linesInProcess = [[NSMutableDictionary alloc] init];
//								completeLines = [[NSMutableArray alloc] init];
//								[self setBackgroundColor:[UIColor whiteColor]];
//								[self setMultipleTouchEnabled:YES];
//								NSLog(@"initwi");
//				}
//				return self;
//}


- (void)makeLinesData {
				// Создаем словарь для хранения рисующихся линий (нахера?)
				linesInProcess = [[NSMutableDictionary alloc] init];	}

- (void)drawRect:(CGRect)rect {
				CGContextRef context = UIGraphicsGetCurrentContext();
				CGContextSetLineWidth(context, 5.0);
				CGContextSetLineCap(context, kCGLineCapRound);
				[[UIColor redColor] set];
				for (NSValue *value in linesInProcess) {
								Line *line = [linesInProcess objectForKey:value];
								CGContextMoveToPoint(context, [line begin].x, [line begin].y);
								CGContextAddLineToPoint(context, [line end].x, [line end].y);
								CGContextStrokePath(context); }}

- (void)clearAll {
				// Очистка коллекций
				[linesInProcess removeAllObjects];
    // Перерисовывание
				[self setNeedsDisplay]; }

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    for (UITouch *touch in touches) {
        // Это двойной тап?
        if ([touch tapCount] > 1) { [self clearAll]; return; }
							// Использование объекта прикосновения (упакован в NSValue) в качестве ключа
								NSValue *key = [NSValue valueWithNonretainedObject:touch];
								// Создание класса Line для данного значения
								CGPoint location = [touch locationInView:self];
								Line *newLine = [[Line alloc] init];
								[newLine setBegin:location]; [newLine setEnd:location];
								// Помещение пары в словарь
								[linesInProcess setObject:newLine forKey:key];
								//[super touchesBegan:touches withEvent:event];  нахрена???
				}}

- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event
{
				// Обновление linesInProcess при перемещении пальца
				for (UITouch *touch in touches) {
								// Загоняем данные в объект класса nsvalue, так как nsset работает только с объектами
								NSValue *key = [NSValue valueWithNonretainedObject:touch];
								// Поиск линии для данного прикосновения
								Line *line = [linesInProcess objectForKey:key];
								// Обновление линии
								CGPoint loc = [touch locationInView:self];
								[line setEnd:loc];
								//speedLength = hypot(x,y);
								//[_debugInfo];
								//[_debugInfoTouchLength setText:loc];
								}
				// Перерисовывание
				[self setNeedsDisplay];
				}

- (void)endTouches:(NSSet *)touches {
    // Удаление завершающих прикосновений из словаря
    for (UITouch *t in touches) {
								NSValue *key = [NSValue valueWithNonretainedObject:t];
								Line *line = [linesInProcess objectForKey:key];
								// Если двойной тап, 'line' примет значение nil,
								// не добавляйте ее в массив
								if (line) {
												//[completeLines addObject:line];
												[linesInProcess removeObjectForKey:key]; }
								// Перерисовывание
								[self setNeedsDisplay]; }}

- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event {
				[self endTouches:touches]; }

- (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event {
				[self endTouches:touches]; }

@end
